{"version":3,"file":"/js/auth.min.js","mappings":"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","sources":["webpack:///./Modules/Frontend/Resources/assets/js/auth.js"],"sourcesContent":["// ==========================\n// Password toggle handlers\n// ==========================\nconst togglePasswordVisibility = (toggleId, inputId) => {\n    const toggle = document.querySelector(`#${toggleId}`);\n    const input = document.querySelector(`#${inputId}`);\n    if (toggle && input) {\n        toggle.addEventListener('click', function () {\n            const type = input.getAttribute('type') === 'password' ? 'text' : 'password';\n            input.setAttribute('type', type);\n            this.classList.toggle('fa-eye-slash');\n        });\n    }\n};\n\ntogglePasswordVisibility('togglePassword', 'password');\ntogglePasswordVisibility('toggleConfirmPassword', 'confirm_password');\n\n// ==========================\n// Helpers\n// ==========================\nfunction validateEmail(email) {\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return re.test(email);\n}\n\nfunction showValidationError(input, message) {\n    const container = input.closest('.input-group');\n    const errorFeedback = container.querySelector('.invalid-feedback');\n    if (errorFeedback) {\n        errorFeedback.textContent = message;\n        input.classList.add('is-invalid');\n    }\n}\n\nfunction clearValidationError(input) {\n    const container = input.closest('.input-group');\n    const errorFeedback = container.querySelector('.invalid-feedback');\n    if (errorFeedback) {\n        errorFeedback.textContent = '';\n        input.classList.remove('is-invalid');\n    }\n}\n\nfunction toggleButton(isSubmitting, button, submittingText, defaultText) {\n    button.textContent = isSubmitting ? submittingText : defaultText;\n    button.disabled = isSubmitting;\n}\n\nfunction attachLiveInputClear(form, fields) {\n    fields.forEach(fieldName => {\n        const input = form.querySelector(`input[name=\"${fieldName}\"]`);\n        if (input) {\n            input.addEventListener('input', () => clearValidationError(input));\n        }\n    });\n}\n\n// ==========================\n// Register Form\n// ==========================\nconst registerForm = document.querySelector('#registerForm');\nif (registerForm) {\n    const registerButton = document.querySelector('#register-button');\n    const errorMessage = document.querySelector('#error_message');\n    const baseUrl = document.querySelector('meta[name=\"base-url\"]').getAttribute('content');\n\n    const firstNameInput = registerForm.querySelector('input[name=\"first_name\"]');\n    const lastNameInput = registerForm.querySelector('input[name=\"last_name\"]');\n\n    // Prevent numbers in first name and last name + immediate error + auto-remove numbers\n    [firstNameInput, lastNameInput].forEach(input => {\n        input.addEventListener('input', () => {\n            const numberPattern = /[0-9]/g;\n            if (numberPattern.test(input.value)) {\n                input.value = input.value.replace(numberPattern, '');\n                showValidationError(input, 'Name field does not allow numbers.');\n            } else if (!input.value.trim()) {\n                showValidationError(input, 'This field is required.');\n            } else {\n                clearValidationError(input);\n            }\n        });\n    });\n\n    attachLiveInputClear(registerForm, ['first_name', 'last_name', 'email', 'password', 'confirm_password']);\n\n    registerForm.addEventListener('submit', async function (e) {\n        e.preventDefault();\n        if (!validateRegisterForm()) return;\n\n        toggleButton(true, registerButton, 'Signing Up...', 'Sign Up');\n        errorMessage.textContent = '';\n\n        try {\n            const formData = new FormData(this);\n            const response = await fetch(`${baseUrl}/api/register?is_ajax=1`, {\n                method: 'POST',\n                headers: {\n                    'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\n                },\n                body: formData\n            });\n\n            const data = await response.json();\n\n            if (!response.ok || !data.status) {\n                const message = data.errors ? Object.values(data.errors).flat()[0] : data.message || 'An error occurred during registration';\n                errorMessage.textContent = message;\n                return;\n            }\n\n            // Auto-login after registration\n            const loginResponse = await fetch(`${baseUrl}/api/login?is_ajax=1`, {\n                method: 'POST',\n                headers: {\n                    'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\n                },\n                body: formData\n            });\n\n            const loginData = await loginResponse.json();\n            if (loginData.status === true) {\n                window.location.href = `${baseUrl}`;\n            } else {\n                errorMessage.textContent = loginData.message || 'Login after registration failed.';\n            }\n\n        } catch (error) {\n            console.error('Registration error:', error);\n            errorMessage.textContent = 'A system error occurred. Please try again later.';\n        } finally {\n            toggleButton(false, registerButton, '', 'Sign Up');\n        }\n    });\n\n    function validateRegisterForm() {\n        let isValid = true;\n        const firstName = registerForm.querySelector('input[name=\"first_name\"]');\n        const lastName = registerForm.querySelector('input[name=\"last_name\"]');\n        const email = registerForm.querySelector('input[name=\"email\"]');\n        const password = registerForm.querySelector('input[name=\"password\"]');\n        const confirmPassword = registerForm.querySelector('input[name=\"confirm_password\"]');\n\n        if (!firstName.value.trim()) {\n            showValidationError(firstName, 'First Name field is required.');\n            isValid = false;\n        }\n\n        if (!lastName.value.trim()) {\n            showValidationError(lastName, 'Last Name field is required.');\n            isValid = false;\n        }\n\n        if (!email.value.trim()) {\n            showValidationError(email, 'Email field is required.');\n            isValid = false;\n        } else if (!validateEmail(email.value)) {\n            showValidationError(email, 'Enter a valid Email Address.');\n            isValid = false;\n        }\n\n        if (!password.value.trim()) {\n            showValidationError(password, 'Password field is required.');\n            isValid = false;\n        } else if (password.value.length < 8) {\n            showValidationError(password, 'Password must be at least 8 characters long.');\n            isValid = false;\n        }\n\n        if (password.value !== confirmPassword.value) {\n            showValidationError(confirmPassword, 'Passwords and confirm password do not match.');\n            isValid = false;\n        }\n\n        return isValid;\n    }\n}\n\n// ==========================\n// Login Form\n// ==========================\nconst loginForm = document.querySelector('#login-form');\nif (loginForm) {\n    const loginButton = document.querySelector('#login-button');\n    const loginError = document.querySelector('#login_error_message');\n    const baseUrl = document.querySelector('meta[name=\"base-url\"]').getAttribute('content');\n\n    attachLiveInputClear(loginForm, ['email', 'password']);\n\n    loginForm.addEventListener('submit', async function (e) {\n        e.preventDefault();\n        if (!validateLoginForm()) return;\n\n        toggleButton(true, loginButton, 'Signing In...', 'Sign In');\n        loginError.textContent = '';\n\n        try {\n            const formData = new FormData(this);\n            const response = await fetch(`${baseUrl}/api/login?is_ajax=1`, {\n                method: 'POST',\n                headers: {\n                    'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\n                },\n                body: formData\n            });\n\n            const data = await response.json();\n\n            if (!response.ok || !data.status) {\n                const message = data.errors ? Object.values(data.errors).flat()[0] : data.message || 'Login failed';\n                loginError.textContent = message;\n                return;\n            }\n\n            if (data.device_limit_reached) {\n                loginError.textContent = \"Your device limit has been reached.\";\n                return;\n            }\n\n            window.location.href = `${baseUrl}`;\n        } catch (error) {\n            console.error('Login error:', error);\n            loginError.textContent = 'A system error occurred. Please try again later.';\n        } finally {\n            toggleButton(false, loginButton, '', 'Sign In');\n        }\n    });\n\n    function validateLoginForm() {\n        let isValid = true;\n        const email = loginForm.querySelector('input[name=\"email\"]');\n        const password = loginForm.querySelector('input[name=\"password\"]');\n\n        if (!email.value.trim()) {\n            showValidationError(email, 'Email field is required.');\n            isValid = false;\n        } else if (!validateEmail(email.value)) {\n            showValidationError(email, 'Enter a valid Email Address.');\n            isValid = false;\n        }\n\n        if (!password.value.trim()) {\n            showValidationError(password, 'Password field is required.');\n            isValid = false;\n        }\n\n        return isValid;\n    }\n}\n\n// ==========================\n// Forgot Password Form\n// ==========================\nconst forgetPasswordForm = document.querySelector('#forgetpassword-form');\nif (forgetPasswordForm) {\n    const forgetPasswordButton = document.querySelector('#forget_password_btn');\n    const forgetPasswordError = document.querySelector('#forgetpassword_error_message');\n    const forgetPasswordMessage = document.querySelector('#forget_password_msg');\n    const baseUrl = document.querySelector('meta[name=\"base-url\"]').getAttribute('content');\n\n    attachLiveInputClear(forgetPasswordForm, ['email']);\n\n    forgetPasswordForm.addEventListener('submit', async function (e) {\n        e.preventDefault();\n        if (!validateForgetPasswordForm()) return;\n\n        toggleButton(true, forgetPasswordButton, 'Sending...', 'Submit');\n        forgetPasswordError.textContent = '';\n        forgetPasswordMessage.classList.add('d-none');\n\n        try {\n            const formData = new FormData(this);\n            const response = await fetch(`${baseUrl}/api/forgot-password?is_ajax=1`, {\n                method: 'POST',\n                headers: {\n                    'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\n                },\n                body: formData\n            });\n\n            const data = await response.json();\n\n            if (!response.ok || !data.status) {\n                const message = data.errors ? Object.values(data.errors).flat()[0] : data.message || 'Password reset failed';\n                forgetPasswordError.textContent = message;\n                return;\n            }\n\n            forgetPasswordMessage.classList.remove('d-none');\n            forgetPasswordForm.reset();\n        } catch (error) {\n            console.error('Forgot password error:', error);\n            forgetPasswordError.textContent = 'A system error occurred. Please try again later.';\n        } finally {\n            toggleButton(false, forgetPasswordButton, '', 'Submit');\n        }\n    });\n\n    function validateForgetPasswordForm() {\n        let isValid = true;\n        const email = forgetPasswordForm.querySelector('input[name=\"email\"]');\n\n        if (!email.value.trim()) {\n            showValidationError(email, 'Email field is required.');\n            isValid = false;\n        } else if (!validateEmail(email.value)) {\n            showValidationError(email, 'Enter a valid Email Address.');\n            isValid = false;\n        }\n\n        return isValid;\n    }\n}\n"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","togglePasswordVisibility","toggleId","inputId","toggle","document","querySelector","concat","input","addEventListener","type","getAttribute","setAttribute","this","classList","validateEmail","email","test","showValidationError","message","errorFeedback","closest","textContent","add","clearValidationError","remove","toggleButton","isSubmitting","button","submittingText","defaultText","disabled","attachLiveInputClear","form","fields","forEach","fieldName","registerForm","registerButton","errorMessage","baseUrl","numberPattern","replace","trim","_ref","_callee","formData","response","data","loginResponse","loginData","_t","_context","preventDefault","isValid","firstName","lastName","password","confirmPassword","FormData","fetch","method","headers","body","json","ok","status","errors","values","flat","window","location","href","console","error","_x","loginForm","loginButton","loginError","_ref2","_callee2","_t2","_context2","device_limit_reached","_x2","forgetPasswordForm","forgetPasswordButton","forgetPasswordError","forgetPasswordMessage","_ref3","_callee3","_t3","_context3","reset","_x3"],"sourceRoot":""}